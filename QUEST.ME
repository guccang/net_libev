Q1:运行ev1时报错
error while loading shared libraries: libev.so.4
原因未找到共享连接库,可是在/usr/local/lib下面有的
解决方案:查看共享连接库配置数据
cat /etc/Id.so.conf
吧/usr/loccal/lib目录放入配置中
echo "/usr/local/lib" >> /etc/Id.so.conf
然后执行
ldconfg
再次运行 ev1 就可以找到libev.so.4这个动态库了。

Q2:git clone问题。使用ssh权限错误的话，使用htpps方式即可


Q3:git push时提示: https://blog.csdn.net/daijingxin/article/details/51326715
warning: push.default 未设置，它的默认值将会在 Git 2.0 由 'matching'
修改为 'simple'。若要不再显示本信息并在其默认值改变后维持当前使用习惯，
进行如下设置：
  git config --global push.default matching
若要不再显示本信息并从现在开始采用新的使用习惯，设置：
  git config --global push.default simple
参见 'git help config' 并查找 'push.default' 以获取更多信息。
（'simple' 模式由 Git 1.7.11 版本引入。如果您有时要使用老版本的 Git，
为保持兼容，请用 'current' 代替 'simple' 模式）
git push 的时候提示需要设置 push.default
原因是git版本问题，2.0增加了新东西。需要设置一下
当然首先我要先说明一下我电脑上git的版本，如下：
    $ git --version
    git version 1.8.4.rc3
    之后我查找了一些关于git push.default设置的知识。
    默认配置下，当使用git push命令而没有明确的指名本地分支和远程参考分支的情况下，会有如上的提示。
    如果git push命令没有明确指定引用规格(refspec),也就是没有指定推送的源分支和目标分支，那么git会采用
push.default定义的动作。不同的值适用于不同的工作流程模式。
    显而易见，主要是因为之前没有进行设置引用规格才出现的这种问题，现在我把push.default的可用值与配置方法贴在下面。
    push.default可用的值如下：
    1.nothing
    不推送任何东西并有错误提示，除非明确指定分支引用规格。强制使用分支引用规格来避免可能潜在的错
误。
    2.current
    推送当前分支到接收端名字相同的分支。
    3.upstream
    推送当前分支到上游@{upstream}。这个模式只适用于推送到与拉取数据相同的仓库，比如中央工作仓库流
程模式。
    4.simple
    在中央仓库工作流程模式下，拒绝推送到上游与本地分支名字不同的分支。也就是只有本地分支名和上游分
支名字一致才可以推送，
    就算是推送到不是拉取数据的远程仓库，只要名字相同也是可以的。在GIT 2.0中，simple将会是push.default的默认值。

    simple只会推送本地当前分支。
    5.matching
    推送本地仓库和远程仓库所有名字相同的分支。

    这是git当前版本的缺省值。

    一般来说我们使用simple就可以进行正常的使用，如果严格一点儿可以用nothing。

    配置push.default的命令如下：

    git config --global push.default simple


Q4:git log 相关
git log --pretty=oneline
git log --stat
git log -p -2
git diff 


Q5:
ev1.cpp:57:36: error: cannot convert ‘GUC::pack_mgr::test_guc_people_handle’ fr
Q6:
读取head时错误，head末尾时，使用了memcopy越界读取了。
   读取head时和读取data时要一样，可能两次memcopy,head很小，使用for循环来做
Q7:c++ 函数指针 类函数指针 类静态函数指针 类虚函数指针 
 http://www.runoob.com/w3cnote/cpp-func-pointer.html


Q8:cscope 代码如何自动更新，每次都要删除out文件然后再重新生成才可以。
